%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Base Relations 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%% Policy relations %%%%%%%%%%%%%%%%%%%%%%%%%%%
berlitz(policy.type(P, T), 
        "$P$ is a $T$ product")
berlitz(policy.insuree(P, I), 
        "the insuree in $P$ is $I$")


%%%%%%%%%%%%%%%%%%%%%%%%%%% Person relations %%%%%%%%%%%%%%%%%%%%%%%%%%%
berlitz(person.dob(P, D), 
        "the date of birth of $P$ is $D$")

%%%%%%%%%%%%%%%%%%%%%%%%%%% Claim relations %%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%% Claim type-generic %%%%%%%%%%%%%%%%%%%%%%%
berlitz(claim.patient(C, P), 
        "the patient in $C$ is $P$")

berlitz(claim.quarter_enrolled_stanford_2023_2024(C, Q), 
        "$Q$ is the first quarter that the patient in $C$ was enrolled in Stanford in the 2023-2024 academic year")


berlitz(claim.date_service_received(C, D), 
        "the service in $C$ was received on $D$")

berlitz(claim.service_type(C, S), 
        "the service in $C$ has type $S$")

berlitz(claim.precertification_received(C, yes), 
        "precertification was received for the service in $C$")
berlitz(claim.precertification_received(C, no), 
        "precertification was not received for the service in $C$")


berlitz(claim.waived_cardinal_care(C, yes), 
        "Cardinal Care was waived")
berlitz(claim.waived_cardinal_care(C, no), 
        "Cardinal Care was not waived")


berlitz(claim.location_service_received(C, L), 
        "the service in $C$ was received at $L$")


berlitz(claim.service_available_at_tier_one_or_two_location(C, yes), 
        "the service in $C$ is available at a tier one or tier two location")
berlitz(claim.service_available_at_tier_one_or_two_location(C, no), 
        "the service in $C$ is not available at a tier one or tier two location")


%%%%%%%%%%%%%%%%%%%%%%% Claim type-specific %%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%% Treatment of Infertility Benefit %%%%%%%%%%%

berlitz(claim.patient_has_male_reproductive_organs(C, yes), 
        "the patient in $C$ has male reproductive organs")
berlitz(claim.patient_has_male_reproductive_organs(C, no), 
        "the patient in $C$ does not have male reproductive organs")

berlitz(claim.patient_has_female_reproductive_organs(C, yes), 
        "the patient in $C$ has female reproductive organs")
berlitz(claim.patient_has_female_reproductive_organs(C, no), 
        "the patient in $C$ does not have female reproductive organs")

%%% I. Diagnose and Evaluate the Underlying Cause of Infertility

%%% II. Surgery to Treat the Underlying Cause of Infertility

%%% III. Ovulation Induction Cycle with Menotropins

berlitz(claim.num_months_regular_intravaginal_inseminations(C, N), 
        "the patient in $C$ has undergone $N$ months of regular intravaginal inseminations")

berlitz(claim.num_cycles_timed_intrauterine_intracervical_inseminations(C, N), 
        "the patient in $C$ has undergone $N$ cycles of intrauterine or intracervical inseminations, document in the medical record")


%%% IV. Intrauterine Insemination

berlitz(claim.num_other_covered_artificial_insemination_attempts(C, N), 
        "$N$ other artificial insemination attempts have been covered this policy year")


%%% V. IVF for Fertility Preservation

berlitz(claim.num_cycles_oral_or_injectable_ovulation_induction(C, N), 
        "the patient in $C$ has undergone $N$ cycles of oral or injectable ovulation induction")


berlitz(claim.inseminations_not_expected_to_be_effective_and_ivf_expected_to_be_only_effective_treatment(C, yes), 
        "for the patient in $C$, intravaginal, intrauterine, or intracervical inseminations would not have been expected to be effective, and IVF would have been expected to be the only effective treatment for infertility")
berlitz(claim.inseminations_not_expected_to_be_effective_and_ivf_expected_to_be_only_effective_treatment(C, no), 
        "for the patient in $C$, intravaginal, intrauterine, or intracervical inseminations would have been expected to be effective, or IVF would not have been expected to be the only effective treatment for infertility")


berlitz(claim.service_is_ivf_with_embryo_transfer(C, yes), 
        "the IVF procedure in $C$ is IVF with embryo transfer")
berlitz(claim.service_is_ivf_with_embryo_transfer(C, no), 
        "the IVF procedure in $C$ is not IVF with embryo transfer")


%%% VI. Cryopreservation for Fertility Preservation


%%%%%%%%%%%%%%%%%% For I, II, III, and IV: information relevant to determining whether someone meets the definition of infertile %%%%%%%%%%%%%%%%%%
berlitz(claim.patient_has_partner_with_male_reproductive_organs(C, yes), 
        "the patient in $C$ has a partner with male reproductive organs")
berlitz(claim.patient_has_partner_with_male_reproductive_organs(C, no),
        "the patient in $C$ does not have a partner with male reproductive organs")


berlitz(claim.patient_has_partner_with_female_reproductive_organs(C, yes),
        "the patient in $C$ has a partner with female reproductive organs")
berlitz(claim.patient_has_partner_with_female_reproductive_organs(C, no),
        "the patient in $C$ does not have a partner with female reproductive organs")


berlitz(claim.age_of_patients_female_partner(C, A), 
        "the patient in $C$ has a partner of age $A$ with female reproductive organs")


berlitz(claim.num_cycles_donor_insemination(C, N), 
        "the patient in $C$ has undergone $N$ cycles of donor artifical insemination")


berlitz(claim.num_months_unprotected_intercourse(C, N), 
        "the patient in $C$ has tried to conceive for $N$ months of unprotected timed intercourse")


berlitz(claim.abnormal_semen_analysis_on_date(C, D),
        "an abnormal semen analysis on $D$ is listed in $C$")


berlitz(claim.patient_diagnosed_with_gender_dysphoria(C, yes),
        "the patient in $C$ has been diagnosed with gender dysphoria")
berlitz(claim.patient_diagnosed_with_gender_dysphoria(C, no), 
        "the patient in $C$ has not been diagnosed with gender dysphoria")


%%%%%%%%%%%%%%%%%% For III and IV %%%%%%%%%%%%%%%%%%

berlitz(claim.patient_has_had_voluntary_sterilization(C, yes),
        "the patient in $C$ has had a voluntary sterilization")
berlitz(claim.patient_has_had_voluntary_sterilization(C, no),
        "the patient in $C$ has not had a voluntary sterilization")


berlitz(claim.patient_had_partner(C, yes),
        "the patient in $C$ has a partner")
berlitz(claim.patient_had_partner(C, no),
        "the patient in $C$ does not have a partner")


berlitz(claim.patients_partner_has_had_voluntary_sterilization(C, yes),
        "the patient in $C$ has a partner who has had a voluntary sterilization procedure")
berlitz(claim.patients_partner_has_had_voluntary_sterilization(C, no),
        "the patient in $C$ does not have a partner who has had a voluntary sterilization procedure")


berlitz(claim.demonstrated_and_documented_condition_causing_infertility(C, COND),
        "the demonstrated and documented condition causing infertility for the patient in $C$ is $COND$")


berlitz(claim.successful_pregnancy_can_be_attained_through_less_costly_treatment_covered_by_plan(C, yes),
        "a successful pregnancy can be attained through a less costly treatment covered by Cardinal Care than the treatment in $C$")
berlitz(claim.successful_pregnancy_can_be_attained_through_less_costly_treatment_covered_by_plan(C, no),
        "a successful pregnancy can not be attained through a less costly treatment covered by Cardinal Care than the treatment in $C$")


%%%%%%%%%%%%%%%%%% For III, IV, V, and VI %%%%%%%%%%%%%%%%%%

berlitz(claim.day_3_fsh_test(C, fsh_test(I, L, dt(DATE, TIME))),
        "day 3 FSH test number $I$ in $C$ was on $DATE$ at $TIME$ and was $L$ mIU/ML")


%%%%%%%%%%%%%%%%%% For V, and VI %%%%%%%%%%%%%%%%%%

berlitz(claim.patient_is_believed_to_be_fertile(C, yes),
        "the patient in $C$ is believed to be fertile")
berlitz(claim.patient_is_believed_to_be_fertile(C, no),
        "the patient in $C$ is not believed to be fertile")


berlitz(claim.planned_service(C, S),
        "the patient in $C$ has the service $S$ planned")


berlitz(claim.will_be_retrieving_eggs_for_use(C, yes),
        "the service in $C$ includes retrieving the patient's eggs for use")
berlitz(claim.will_be_retrieving_eggs_for_use(C, no),
        "the service in $C$ does not include retrieving the patient's eggs for use")


berlitz(claim.patient_has_premature_ovarian_failure(C, yes),
        "the patient in $C$ has premature ovarian failure")
berlitz(claim.patient_has_premature_ovarian_failure(C, no),
        "the patient in $C$ does not have premature ovarian failure")


berlitz(claim.num_other_covered_art_services(C, N),
        "$N$ other courses of ART treatment have been covered this policy year")


%%%%%%%%%%% Family Planning Services - Female Contraceptives Benefit %%%%%%%%%%%

%%% Counseling services
berlitz(claim.type_of_contraceptive_counseling(C, T),
        "the contraceptive counseling in $C$ is regarding $T$")


berlitz(claim.counseling_setting(C, S),
        "the setting of the contraceptive counseling in $C$ is $S$")


%%% Contraceptives (drugs or devices) - includes OTC prescribed by provider, and follow-up care

berlitz(claim.type_of_female_contraceptive_method_provided(C, T),
        "the female contraceptive method provided in $C$ is $T$")

berlitz(claim.otc_female_contraceptive_method_is_prescribed_by_provider(C, yes),
        "the over-the-counter female contraceptive method in $C$ is prescribed by a provider")
berlitz(claim.otc_female_contraceptive_method_is_prescribed_by_provider(C, no),
        "the over-the-counter female contraceptive method in $C$ is not prescribed by a provider")

berlitz(claim.mode_of_providing_service(C, provided_by), 
        "$C$ is regarding a service provided by a healthcare provider")
berlitz(claim.mode_of_providing_service(C, administered_by), 
        "$C$ is regarding a service administered by a healthcare provider")
berlitz(claim.mode_of_providing_service(C, removed_by), 
        "$C$ is regarding removal by a healthcare provider")
berlitz(claim.mode_of_providing_service(C, provided_related_service), 
        "$C$ is regarding the provision of services related to the primary service listed in $C$")
berlitz(claim.mode_of_providing_service(C, provided_related_supplies), 
        "$C$ is regarding the provision of supplies related to the primary type of service listed in $C$")
berlitz(claim.mode_of_providing_service(C, provided_follow_up_care), 
        "$C$ is regarding follow-up care for the primary type of service listed in $C$")
berlitz(claim.mode_of_providing_service(C, other), 
        "$C$ is regarding service provided in a non-standard modality")

%% Voluntary sterilization
berlitz(claim.type_of_female_voluntary_sterilization_procedure_service_or_supplies(C, T),
        "the type of female voluntary sterilization procedure or related services or supplies in $C$ is $T$")


%%%%%%%%%%% Preventive Care Immunizations Benefit %%%%%%%%%%%

berlitz(claim.immunization_for_disease(C, D),
        "the immunization in $C$ is for $D$")

berlitz(claim.reason_for_immunization(C, R),
        "the immunization in $C$ was received because $R$")

berlitz(claim.2023_2024_influenza_vaccination(C, influenza_vaccination_event(_, DATE)),
        "the patient in $C$ received a 2023-2024 formulation of the flu vaccine on $DATE$")

berlitz(claim.patient_had_received_at_least_two_doses_flu_vaccine_before_july_2023(C, yes_ternary),
        "the patient in $C$ had received at least two tri- or quadrivalent doses of the flu vaccine before July 2023")
berlitz(claim.patient_had_received_at_least_two_doses_flu_vaccine_before_july_2023(C, unknown), 
        "it is unknown whether the patient in $C$ had received at least two tri- or quadrivalent doses of the flu vaccine before July 2023")
berlitz(claim.patient_had_received_at_least_two_doses_flu_vaccine_before_july_2023(C, no_ternary),
        "the patient in $C$ had not received at least two tri- or quadrivalent doses of the flu vaccine before July 2023")

berlitz(claim.patient_is_immunocompromised(C, yes),
        "the patient in $C$ is immunocompromised")
berlitz(claim.patient_is_immunocompromised(C, no),
        "the patient in $C$ is not immunocompromised")

berlitz(claim.covid19_vaccine_brand(C, BRAND),
        "the brand of the Covid-19 vaccine received during the immunization in $C$ is $BRAND$")

berlitz(claim.covid19_vaccination(C, covid19_vaccination_event(_, BRAND, not_updated)),
        "the patient in $C$ received a $BRAND$ Covid-19 vaccine on that was not the updated 2023-2024 formulation")
berlitz(claim.covid19_vaccination(C, covid19_vaccination_event(_, BRAND, updated_2023_2024)),
        "the patient in $C$ received a $BRAND$ Covid-19 vaccine on that was the updated 2023-2024 formulation")


%%%%%%%%%%%%%%%%%%%%%%%%%%% General Exclusions %%%%%%%%%%%%%%%%%%%%%%%%%%%

berlitz(claim.reception_of_service_or_supplies_resulted_from_service_in_armed_forces(C, yes),
        "the service in $C$ was received from a provider as a result of an injury sustained, or illness contracted, while in the service of the armed forces of any country")
berlitz(claim.reception_of_service_or_supplies_resulted_from_service_in_armed_forces(C, no),
        "the service in $C$ was not received from a provider as a result of an injury sustained, or illness contracted, while in the service of the armed forces of any country")

berlitz(claim.service_or_supplies_provided_by_provider_acting_beyond_scope_of_legal_authority(C, yes),
        "the service in $C$ was provided by a provider that was acting beyond the scope of its legal authority, (I.e. the provider was not licensed/certified to provide the health care services they provided to the patient)")
berlitz(claim.service_or_supplies_provided_by_provider_acting_beyond_scope_of_legal_authority(C, no),
        "the service in $C$ was not provided by a provider that was acting beyond the scope of its legal authority, (I.e. the provider was licensed/certified to provide the health care services they provided to the patient)")

berlitz(claim.service_is_clinical_trial_therapy_experimental_investigational(C, yes),
        "the service in $C$ was an experimental or investigational clinical trial therapy")
berlitz(claim.service_is_clinical_trial_therapy_experimental_investigational(C, no),
        "the service in $C$ was not an experimental or investigational clinical trial therapy")

berlitz(claim.service_is_genetic_care(C, yes),
        "the service in $C$ altered the body's genes, genetic make-up, or the expression of the body's genes")
berlitz(claim.service_is_genetic_care(C, no),
        "the service in $C$ did not alter the body's genes, genetic make-up, or the expression of the body's genes")

berlitz(claim.service_for_correction_of_congenital_birth_defects(C, yes),
        "the service in $C$ was for the correction of congenital birth defects")
berlitz(claim.service_for_correction_of_congenital_birth_defects(C, no),
        "the service in $C$ was not for the correction of congenital birth defects")

berlitz(claim.payment_for_service_made_for_judgment_settlement(C, yes),
        "the payment for the service in $C$ was made as a judgment or settlement by any person deemed responsible for an injury or illness, or by their insurers")
berlitz(claim.payment_for_service_made_for_judgment_settlement(C, no),
        "the payment for the service in $C$ was not made as a judgment or settlement by any person deemed responsible for an injury or illness, or by their insurers")

berlitz(claim.service_provided_by_family_member(C, yes),
        "the service in $C$ was provided by a spouse, domestic partner, civil union partner, parent, child, step-child, brother, sister, in-law or any household member of the patient")
berlitz(claim.service_provided_by_family_member(C, no),
        "the service in $C$ was not provided by a spouse, domestic partner, civil union partner, parent, child, step-child, brother, sister, in-law or any household member of the patient")

berlitz(claim.treated_in_facility_owned_or_operated_by_governmental_entity(C, yes),
        "the service in $C$ was received in a facility owned or operated by any federal, state, or other governmental entity")
berlitz(claim.treated_in_facility_owned_or_operated_by_governmental_entity(C, no),
        "the service in $C$ was not received in a facility owned or operated by any federal, state, or other governmental entity")


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Defined Relations 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
berlitz(covers(P, C),
        "$P$ covers $C$")


berlitz(covered_under_policy(C, P, T),
        "$C$ is covered under $P$ which is an instance of $T$")


berlitz(policy_in_effect(C, P),
        "$P$ is in effect during $C$")


berlitz(service_received_at_valid_provider(C, P),
        "the service in $C$ was received at a provider that is valid in $P$")


berlitz(meets_additional_eligibility_requirements_if_present(C),
        "$C$ meets additional eligibility requirements, if there are any")


berlitz(medically_necessary_service(C),
        "the service received in $C$ is medically necessary")


berlitz(precertified_if_necessary(C),
        "the service in $C$ was precertified, if necessary")


berlitz(beyond_limits(C),
        "the service in $C$ is beyond limits on coverage")


berlitz(general_exclusion_applies(C),
        "one or more general exclusions apply to $C$")


berlitz(policy_in_effect_for_claim(POL, C),
        "$POL$ is in effect for $C$")


berlitz(date_between_dates_incl(ServiceDate, StartDate, EndDate),
        "$ServiceDate$ is between $StartDate$ and $EndDate$, inclusive")


berlitz(covered_under_cardinal_care_23_24_benefit(C, B),
        "$C$ is covered under the Cardinal Care 2023-2024 benefit $B$")


berlitz(is_basic_infertility_service(S),
        "$S$ is a basic infertility service")


berlitz(is_comprehensive_infertility_service(S),
        "$S$ is a comprehensive infertility service")


berlitz(is_art_service(S),
        "$S$ is an ART service")


berlitz(is_infertile(C, P),
        "$P$ is infertile")


berlitz(meets_comprehensive_infertility_service_eligibility_requirements(C),
        "$C$ meets the eligibility requirements for comprehensive infertility services")


berlitz(meets_no_voluntary_sterilization_req(C),
        "either the patient in $C$ or their partner has not had a voluntary sterilization procedure")


berlitz(meets_day_3_fsh_level_criteria(C, P),
        "the day 3 FSH level criteria are met by the patient $P$ in $C$")


berlitz(age_at_time_of_service(C, P, A),
        "the age of $P$ at the time of the service in $C$ is $A$")


berlitz(lt(X, Y),
        "$X$ is less than $Y$")


berlitz(most_recent_day_3_fsh_test(C, fsh_test(I, L, dt(DATE, TIME))),
        "the most recent day 3 FSH test in $C$ was on $DATE$ at $TIME$ and was $L$ mIU/ML")


berlitz(claim.day_3_fsh_test_after_age_40(C, fsh_test(I, L, dt(DATE, TIME))),
        "a day 3 FSH test in $C$ taken after the age of 40 was on $DATE$ at $TIME$ and was $L$ mIU/ML")


berlitz(datetimetotimestamp(D, T, S),
        "the timestamp for $D$ and $T$ is $S$")


berlitz(meets_fertility_preservation_eligibility_requirements(C),
        "$C$ meets the eligibility requirements for fertility preservation services")


berlitz(eggs_to_be_retrieved_meet_fsh_and_ovarian_responsiveness_criteria(C, A),
        "the eggs of the patient in $C$ that are to be retrieved for use meet the required ovarian responsiveness criteria for someone of age $A$")


berlitz(meets_fsh_test_recency_req(C, T),
        "the FSH test $T$ in $C$ meets the FSH test recency requirements")


berlitz(get_timestamp_from_date(D, S),
        "the timestamp for $D$ is $S$")


berlitz(meets_attempt_to_conceive_reqs_female_without_male_partner(C, A),
        "$C$ meets the minimum requirements for attempting to conceive for a female of age $A$ without a male partner")


berlitz(meets_attempt_to_conceive_reqs_female_with_male_partner(C, A),
        "$C$ meets the minimum requirements for attempting to conceive for a female of age $A$ with a male partner")


berlitz(meets_attempt_to_conceive_reqs_male_with_female_partner(C, A),
        "$C$ meets the minimum requirements for attempting to conceive for a male with a female partner of age $A$")


berlitz(meets_ovulation_induction_cpb_reqs(C),
        "$C$ meets the requirements for ovulation induction that are listed in Aetna's CPB 0327")


berlitz(meets_ovulation_induction_reqs_under_35(C),
        "$C$ meets the requirements for ovulation induction for a patient under age 35 that are listed in Aetna's CPB 0327")


berlitz(meets_ovulation_induction_reqs_35_and_over(C),
        "$C$ meets the requirements for ovulation induction for a patient age 35 or over that are listed in Aetna's CPB 0327")


berlitz(meets_ivf_cpb_reqs(C),
        "$C$ meets the requirements for IVF that are listed in Aetna's CPB 0327")


berlitz(requires_precertification(S),
        "$S$ requires precertification")


berlitz(not_yet_birthday_delta(M, D, DOBM, DOBD, -1),
        "on the date $M$ $D$ it is not yet the person's birthday")
berlitz(not_yet_birthday_delta(M, D, DOBM, DOBD, 0),
        "on the date $M$ $D$ it is not before the person's birthday")


berlitz(leq_datetime(DT1, DT2),
        "$DT1$ is on or before $DT2$")

berlitz(is_preventive_care_service(S),
        "$S$ is a preventive care service")

%%%%%%%%%%% Family Planning Services - Female Contraceptives Benefit %%%%%%%%%%%

berlitz(is_covered_type_of_contraceptive_counseling(C),
        "the type of contraceptive counseling in $C$ is covered")

berlitz(is_group_or_individual_counseling(C),
        "the counseling in the service in $C$ is in a group or individual setting")

berlitz(fda_approved_female_contraceptive_method(M),
        "$M$ is an FDA-approved method of female contraception")

berlitz(female_contraceptive_method_is_prescribed_if_otc(C),
        "the female contraceptive method in the service in $C$, if it is over-the-counter, is prescribed by a physician")

berlitz(otc_female_contraceptive_method(M),
        "$M$ is an over-the-counter female contraceptive method")

berlitz(valid_mode_of_providing_female_contraceptive_method(C),
        "the contraceptive method in $C$ was provided in a valid mode")

berlitz(female_contraceptives_service(S),
        "$S$ is a female contraceptives service")

%%%%%%%%%%% Preventive Care Immunizations Benefit %%%%%%%%%%%

berlitz(is_immunization_for_preventive_care(C),
        "the immunization in $C$ is for preventive care")

berlitz(infectious_disease_for_which_cdc_acip_recommends_immunization(D),
        "$D$ is an infectious disease for which the CDC ACIP recommends immunization")

berlitz(below_2024_cdc_acip_age_guideline_max(C),
        "the patient in $C$ has not received the maximum number of vaccines of the type specified in $C$ for a person of their age based on the 2024 CDC ACIP guidelines")

berlitz(below_2023_cdc_acip_age_guideline_max(C),
        "the patient in $C$ has not received the maximum number of vaccines of the type specified in $C$ for a person of their age based on the 2023 CDC ACIP guidelines")

berlitz(below_2024_cdc_acip_age_guideline_max_by_disease_and_age(D, A, C),
        "the patient in $C$ has not received the maximum number of $D$ vaccines of the type specified in $C$ for a person of age $A$ based on the 2024 CDC ACIP guidelines")


berlitz(patient_geq_6_months_old_at_time_of_service(C),
        "the patient in $C$ is at least 6 months old at the time of the service in the claim")

berlitz(max_doses_flu_vaccine_allowed_for_child_6_months_through_9_years(C, N),
        "if the patient in $C$ is a child of age 6 months through 9 years, then the maximum number of doses of the flu vaccine they should receive this year is $N$")

berlitz(patient_age_bracket_for_covid19_vaccination(C, A, B),
        "the age bracket of the patient in $C$ aged $A$ is $B$")

berlitz(covid19_dose_counts(NumOldModerna, NumOldPfizer, NumOldNovavax, NumOldJnJ, NumUpdatedOfBrand),
        "the number of Covid 19 vaccine doses received by the patient in $C$ is $NumOldModerna$ out-of-date Moderna vaccines, $NumOldPfizer$ out-of-date Pfizer vaccines, $NumOldNovavax$ out-of-date Novavax vaccines, $NumOldJnJ$ out-of-date J&J vaccines, and $NumUpdatedOfBrand$ up-to-date vaccines of the same brand as administered during the service in $C$")

berlitz(max_allowed_doses_covid19_vaccine(yes, B, T, N, dose_counts(NumOldModerna, NumOldPfizer, NumOldNovavax, NumOldJnJ)),
        "$N$ is the maximum number of doses of the $T$ Covid-19 vaccine that can be received by a moderately-to-severely immunocompromised patient in the age bracket $B$ who has received $NumOldModerna$ out-of-date Moderna vaccines, $NumOldPfizer$ out-of-date Pfizer vaccines, $NumOldNovavax$ out-of-date Novavax vaccines, and $NumOldJnJ$ out-of-date J&J vaccines")
berlitz(max_allowed_doses_covid19_vaccine(no, B, T, N, dose_counts(NumOldModerna, NumOldPfizer, NumOldNovavax, NumOldJnJ)),
        "$N$ is the maximum number of doses of the $T$ Covid-19 vaccine that can be received by a non-immunocompromised patient in the age bracket $B$ who has received $NumOldModerna$ out-of-date Moderna vaccines, $NumOldPfizer$ out-of-date Pfizer vaccines, $NumOldNovavax$ out-of-date Novavax vaccines, and $NumOldJnJ$ out-of-date J&J vaccines")

berlitz(already_begun_another_updated_2023_2024_covid19_vaccination_series(C),
        "the patient in $C$ has already begun a series of Covid-19 vaccinations with the updated 2023-2024 formulation, with vaccines of a different brand than the type received in the service in $C$")

berlitz(n_months_diff(D1, D2, N),
        "the number of months between $D1$ and $D2$ is $N$")

% Note: D1 and D2 are integers. This Berlitz entry is meant to give context around this relation's usage, if not its formal definition.

berlitz(not_yet_day_of_month_delta(D1, D2, 0),
        "the day of the month in the first date is at least that of the second date")
berlitz(not_yet_day_of_month_delta(D1, D2, -1),
        "the day of the month in the first date is less than that of the second date")