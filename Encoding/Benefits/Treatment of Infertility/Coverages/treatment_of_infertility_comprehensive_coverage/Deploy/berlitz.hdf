%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Base Relations 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%% III. Ovulation Induction Cycle with Menotropins

berlitz(claim.num_months_regular_intravaginal_inseminations(C, N), 
        "the patient in $C$ has undergone $N$ months of regular intravaginal inseminations")

berlitz(claim.num_cycles_timed_intrauterine_intracervical_inseminations(C, N), 
        "the patient in $C$ has undergone $N$ cycles of intrauterine or intracervical inseminations, document in the medical record")


%%% IV. Intrauterine Insemination

berlitz(claim.num_other_covered_artificial_insemination_attempts(C, N), 
        "$N$ other artificial insemination attempts have been covered this policy year")

%%%%%%%%%%%%%%%%%% For III and IV %%%%%%%%%%%%%%%%%%

berlitz(claim.patient_has_had_voluntary_sterilization(C, yes),
        "the patient in $C$ has had a voluntary sterilization")
berlitz(claim.patient_has_had_voluntary_sterilization(C, no),
        "the patient in $C$ has not had a voluntary sterilization")


berlitz(claim.demonstrated_and_documented_condition_causing_infertility(C, COND),
        "the demonstrated and documented condition causing infertility for the patient in $C$ is $COND$")

berlitz(claim.successful_pregnancy_can_be_attained_through_less_costly_treatment_covered_by_plan(C, yes),
        "a successful pregnancy can be attained through a less costly treatment covered by Cardinal Care than the treatment in $C$")
berlitz(claim.successful_pregnancy_can_be_attained_through_less_costly_treatment_covered_by_plan(C, no),
        "a successful pregnancy can not be attained through a less costly treatment covered by Cardinal Care than the treatment in $C$")

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Defined Relations 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

berlitz(is_comprehensive_infertility_service(S),
        "$S$ is a comprehensive infertility service")

berlitz(meets_comprehensive_infertility_service_eligibility_requirements(C),
        "$C$ meets the eligibility requirements for comprehensive infertility services")

berlitz(meets_no_voluntary_sterilization_req(C),
        "either the patient in $C$ or their partner has not had a voluntary sterilization procedure")

berlitz(patient_meets_day_3_fsh_level_criteria(C),
        "the day 3 FSH level criteria are met by the patient in $C$")

berlitz(meets_ovulation_induction_cpb_reqs(C),
        "$C$ meets the requirements for ovulation induction that are listed in Aetna's CPB 0327")

berlitz(meets_ovulation_induction_reqs_under_35(C),
        "$C$ meets the requirements for ovulation induction for a patient under age 35 that are listed in Aetna's CPB 0327")

berlitz(meets_ovulation_induction_reqs_35_and_over(C),
        "$C$ meets the requirements for ovulation induction for a patient age 35 or over that are listed in Aetna's CPB 0327")
%%%%%%%%%%% Treatment of Infertility Benefit %%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Defined Relations 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

berlitz(get_timestamp_from_date(D, S),
        "the timestamp for $D$ is $S$")
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Base Relations 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%% For I, II, III, and IV: information relevant to determining whether someone meets the definition of infertile %%%%%%%%%%%%%%%%%%


berlitz(claim.sex_of_patient_trying_to_conceive(C, S),
        "the sex of the patient in $C$ is $S$")

berlitz(claim.sex_of_patients_partner(C, no_partner),
        "the patient in $C$ does not have a partner")
berlitz(claim.sex_of_patients_partner(C, male),
        "the patient in $C$ has a male partner")
berlitz(claim.sex_of_patients_partner(C, female),
        "the patient in $C$ has a female partner")


berlitz(claim.age_of_patients_female_partner(C, A), 
        "the patient in $C$ has a partner of age $A$ with female reproductive organs")


berlitz(claim.num_cycles_donor_insemination(C, N), 
        "the patient in $C$ has undergone $N$ cycles of donor artifical insemination")


berlitz(claim.num_months_unprotected_intercourse(C, N), 
        "the patient in $C$ has tried to conceive for $N$ months of unprotected timed intercourse")


berlitz(claim.abnormal_semen_analyses(C, Analyses),
        "claim $C$ has lists the abnormal semen analyses $Analyses$")


berlitz(claim.patient_or_partner_diagnosed_with_gender_dysphoria(C, yes),
        "the patient in $C$ or their partner has been clinically diagnosed with gender dysphoria")
berlitz(claim.patient_or_partner_diagnosed_with_gender_dysphoria(C, no), 
        "the patient in $C$ or their partner has not been clinically diagnosed with gender dysphoria")

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Defined Relations 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

berlitz(patient_is_infertile(C),
        "the patient in $C$ is infertile")

berlitz(meets_attempt_to_conceive_reqs_female_without_male_partner(C, A),
        "$C$ meets the minimum requirements for attempting to conceive for a female of age $A$ without a male partner")

berlitz(meets_attempt_to_conceive_reqs_female_with_male_partner(C, A),
        "$C$ meets the minimum requirements for attempting to conceive for a female of age $A$ with a male partner")

berlitz(meets_attempt_to_conceive_reqs_male_with_female_partner(C, A),
        "$C$ meets the minimum requirements for attempting to conceive for a male with a female partner of age $A$")
%%%%%%%%%%%%%%%%%% For III, IV, V, and VI %%%%%%%%%%%%%%%%%%

berlitz(claim.day_3_fsh_tests(C, Tests),
        "claim $C$ specifies list of day 3 FSH tests as: $Tests$")

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Defined Relations 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

berlitz(most_recent_day_3_fsh_test(C, fsh_test(L, DATE, TIME)),
        "the most recent day 3 FSH test in $C$ was on $DATE$ at $TIME$ and was $L$ mIU/ML")

berlitz(day_3_fsh_tests_after_age_40_in_claim(C, Tests),
        "claim $C$ specifies the following list of day 3 FSH tests taken after the age of 40: $Tests$")

berlitz(leq_datetime(DT1, DT2),
        "$DT1$ is on or before $DT2$")
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Base Relations 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%% Claim relations %%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%% Claim type-generic %%%%%%%%%%%%%%%%%%%%%%%
berlitz(claim.patient(C, P), 
        "the patient in $C$ is $P$")

% berlitz(claim.quarter_enrolled_stanford_2024_2025(C, Q), 
%         "$Q$ is the first quarter that the patient in $C$ was enrolled in Stanford in the 2023-2024 academic year")


berlitz(claim.date_service_received(C, D), 
        "the service in $C$ was received on $D$")

berlitz(claim.service_type(C, S), 
        "the service in $C$ has type $S$")

berlitz(claim.precertification_received(C, yes), 
        "precertification was received for the service in $C$")
berlitz(claim.precertification_received(C, no), 
        "precertification was not received for the service in $C$")


% berlitz(claim.waived_cardinal_care(C, yes), 
%         "Cardinal Care was waived")
% berlitz(claim.waived_cardinal_care(C, no), 
%         "Cardinal Care was not waived")


berlitz(claim.location_service_received(C, L), 
        "the service in $C$ was received at $L$")


berlitz(claim.service_available_at_tier_one_or_two_location(C, yes), 
        "the service in $C$ is available at a tier one or tier two location")
berlitz(claim.service_available_at_tier_one_or_two_location(C, no), 
        "the service in $C$ is not available at a tier one or tier two location")


%%%%%%%%%%%%%%%%%%%%%%%%%%% General Exclusions %%%%%%%%%%%%%%%%%%%%%%%%%%%

% berlitz(claim.reception_of_service_or_supplies_resulted_from_service_in_armed_forces(C, yes),
%         "the service in $C$ was received from a provider as a result of an injury sustained, or illness contracted, while in the service of the armed forces of any country")
% berlitz(claim.reception_of_service_or_supplies_resulted_from_service_in_armed_forces(C, no),
%        "the service in $C$ was not received from a provider as a result of an injury sustained, or illness contracted, while in the service of the armed forces of any country")

% berlitz(claim.service_or_supplies_provided_by_provider_acting_beyond_scope_of_legal_authority(C, yes),
%         "the service in $C$ was provided by a provider that was acting beyond the scope of its legal authority, (I.e. the provider was not licensed/certified to provide the health care services they provided to the patient)")
% berlitz(claim.service_or_supplies_provided_by_provider_acting_beyond_scope_of_legal_authority(C, no),
%         "the service in $C$ was not provided by a provider that was acting beyond the scope of its legal authority, (I.e. the provider was licensed/certified to provide the health care services they provided to the patient)")

% berlitz(claim.service_is_clinical_trial_therapy_experimental_investigational(C, yes),
%         "the service in $C$ was an experimental or investigational clinical trial therapy")
% berlitz(claim.service_is_clinical_trial_therapy_experimental_investigational(C, no),
%         "the service in $C$ was not an experimental or investigational clinical trial therapy")

% berlitz(claim.service_is_genetic_care(C, yes),
%         "the service in $C$ altered the body's genes, genetic make-up, or the expression of the body's genes")
% berlitz(claim.service_is_genetic_care(C, no),
%         "the service in $C$ did not alter the body's genes, genetic make-up, or the expression of the body's genes")

% berlitz(claim.service_for_correction_of_congenital_birth_defects(C, yes),
%         "the service in $C$ was for the correction of congenital birth defects")
% berlitz(claim.service_for_correction_of_congenital_birth_defects(C, no),
%         "the service in $C$ was not for the correction of congenital birth defects")

% berlitz(claim.payment_for_service_made_for_judgment_settlement(C, yes),
%         "the payment for the service in $C$ was made as a judgment or settlement by any person deemed responsible for an injury or illness, or by their insurers")
% berlitz(claim.payment_for_service_made_for_judgment_settlement(C, no),
%         "the payment for the service in $C$ was not made as a judgment or settlement by any person deemed responsible for an injury or illness, or by their insurers")

% berlitz(claim.service_provided_by_family_member(C, yes),
%         "the service in $C$ was provided by a spouse, domestic partner, civil union partner, parent, child, step-child, brother, sister, in-law or any household member of the patient")
% berlitz(claim.service_provided_by_family_member(C, no),
%         "the service in $C$ was not provided by a spouse, domestic partner, civil union partner, parent, child, step-child, brother, sister, in-law or any household member of the patient")

% berlitz(claim.treated_in_facility_owned_or_operated_by_governmental_entity(C, yes),
%         "the service in $C$ was received in a facility owned or operated by any federal, state, or other governmental entity")
% berlitz(claim.treated_in_facility_owned_or_operated_by_governmental_entity(C, no),
%         "the service in $C$ was not received in a facility owned or operated by any federal, state, or other governmental entity")


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% builtins 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

berlitz(member(E, L),
        "$E$ is one of $L$")

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Defined Relations 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% berlitz(covered_under_policy(C, P, T),
%         "$C$ is covered under $P$ which is an instance of $T$")


% berlitz(policy_in_effect(C, P),
%         "$P$ is in effect during $C$")


berlitz(service_received_at_valid_provider(C),
        "the service in $C$ was received at a valid provider")

berlitz(meets_additional_eligibility_requirements_if_present(C),
        "$C$ meets additional eligibility requirements, if there are any")


berlitz(medically_necessary_service(C),
        "the service received in $C$ is medically necessary")


berlitz(precertified_if_necessary(C),
        "the service in $C$ was precertified, if necessary")


berlitz(beyond_limits(C),
        "the service in $C$ is beyond limits on coverage")


berlitz(general_exclusion_applies(C),
        "one or more general exclusions apply to $C$")


% berlitz(policy_in_effect_for_claim(POL, C),
%         "$POL$ is in effect for $C$")


berlitz(date_between_dates_incl(ServiceDate, StartDate, EndDate),
        "$ServiceDate$ is between $StartDate$ and $EndDate$, inclusive")


berlitz(covered_under_cardinal_care_24_25_benefit(C, B),
        "$C$ is covered under the Cardinal Care 2024-2025 benefit $B$")

berlitz(patient_age_at_time_of_service(C, A),
        "the age of the patient in $C$ at the time of the service is $A$")

berlitz(patient_age_on_date(DOB, D, A),
        "the age of the patient with date of birth $DOB$ on $D$ is $A$")

berlitz(age_at_time_of_service(C, P, A),
        "the age of $P$ at the time of the service in $C$ is $A$")

berlitz(age_on_date(P, D, A),
        "the age of $P$ on $D$ is $A$")

berlitz(datetimetotimestamp(D, T, S),
        "the timestamp for $D$ and $T$ is $S$")


berlitz(requires_precertification(S),
        "$S$ requires precertification")


berlitz(not_yet_birthday_delta(M, D, DOBM, DOBD, -1),
        "on the date $M$ $D$ it is not yet the person's birthday")
berlitz(not_yet_birthday_delta(M, D, DOBM, DOBD, 0),
        "on the date $M$ $D$ it is not before the person's birthday")

berlitz(n_months_diff(D1, D2, N),
        "the number of months between $D1$ and $D2$ is $N$")

% Note: D1 and D2 are integers. This Berlitz entry is meant to give context around this relation's usage, if not its formal definition.
berlitz(not_yet_day_of_month_delta(D1, D2, 0),
        "the day of the month in the first date is at least that of the second date")
berlitz(not_yet_day_of_month_delta(D1, D2, -1),
        "the day of the month in the first date is less than that of the second date")


berlitz(is_preventive_care_service(S),
        "$S$ is a preventive care service")
