
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Eligible for service - additional eligibility requirements
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%% Preventive Care Immunizations
covered_under_cardinal_care_23_24_benefit(C, preventive_care_immunizations_benefit) :-
    claim.service_type(C, preventive_care_immunization) &
    is_immunization_for_preventive_care(C) &
    claim.immunization_for_disease(C, Disease) &
    infectious_disease_for_which_cdc_acip_recommends_immunization(Disease)

is_immunization_for_preventive_care(C) :-
    claim.reason_for_immunization(C, R) &
    member(R, [
        preventive_care,
        recommended_as_preventive_care
    ]) % Other options: required_for_employment, required_for_travel, other

% Note on policy wording interpretation: I am reading the policy as saying that the condition is on the CDC ACIP's recommendation as to which infectious diseases be vaccinated against, not which vaccines be used
infectious_disease_for_which_cdc_acip_recommends_immunization(influenza_disease)
infectious_disease_for_which_cdc_acip_recommends_immunization(covid19_disease)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Medical necessity
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%% Preventive Care Immunizations
% Preventive care is a larger category of benefits, including female contracepives
% Note: CPB 0035 concerns Influenza Vaccines, but just points to the CDC ACIP guidelines
is_preventive_care_service(preventive_care_immunization)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Limitations from Schedule of Benefits
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

beyond_limits(Claim) :-
    claim.service_type(Claim, preventive_care_immunization) &
    claim.date_service_received(Claim, Date) &
    date_between_dates_incl(Date, 2024_01_01, 2024_12_31) & 
    ~below_2024_cdc_acip_age_guideline_max(Claim)

beyond_limits(Claim) :-
    claim.service_type(Claim, preventive_care_immunization) &
    claim.date_service_received(Claim, Date) &
    date_between_dates_incl(Date, 2023_01_01, 2023_12_31) & 
    ~below_2023_cdc_acip_age_guideline_max(Claim)


%% CDC ACIP Guidelines
below_2024_cdc_acip_age_guideline_max(C) :-
    claim.immunization_for_disease(C, D) &
    claim.patient(C, P) &
    age_at_time_of_service(C, P, A) &
    below_2024_cdc_acip_age_guideline_max_by_disease_and_age(D, A, C)

%% Influenza vaccine
% For ages >= 9 years, one dose annually (unless received first dose before turning 9, and needed multiple doses. That case is handled above.)
below_2024_cdc_acip_age_guideline_max_by_disease_and_age(influenza_disease, Age, Claim) :-
    claim.patient(Claim, P) &
    leq(9, Age) &
    countofall(I, claim.2023_2024_influenza_vaccination(Claim, influenza_vaccination_event(I, _)), 0)

% For ages [6 months, 9 years), depends on number of doses received in prior seasons
below_2024_cdc_acip_age_guideline_max_by_disease_and_age(influenza_disease, Age, Claim) :-
    patient_geq_6_months_old_at_time_of_service(Claim) &
    lt(Age, 9) &
    max_doses_flu_vaccine_allowed_for_child_6_months_through_9_years(Claim, MaxDoses) &
    countofall(I, claim.2023_2024_influenza_vaccination(Claim, influenza_vaccination_event(I, _)), ReceivedDoses) &
    lt(ReceivedDoses, MaxDoses)

% If child aged 9 hasn't received any doses of 2023-2024 yet, then 1 is allowed
below_2024_cdc_acip_age_guideline_max_by_disease_and_age(influenza_disease, 9, Claim) :-
    countofall(I, claim.2023_2024_influenza_vaccination(Claim, influenza_vaccination_event(I, _)), 0)

% If child aged 9 had received precisely one dose when they were 8 and they were allowed to receive two doses, then another is allowed
below_2024_cdc_acip_age_guideline_max_by_disease_and_age(influenza_disease, 9, Claim) :-
    countofall(I, claim.2023_2024_influenza_vaccination(Claim, influenza_vaccination_event(I, _)), 1) &
    claim.2023_2024_influenza_vaccination(Claim, influenza_vaccination_event(_, VaccinationDate)) & 
    claim.patient(Claim, P) &
    age_on_date(P, VaccinationDate, 8) &
    max_doses_flu_vaccine_allowed_for_child_6_months_through_9_years(Claim, 2)
    
    % 1 dose if child had previously received >= 2 doses of tri- or quadrivalent flu vaccine >= 4 weeks apart before July 2023
    % 2 doses >= 4 weeks apart if not, or if child's vaccination history is unknown
max_doses_flu_vaccine_allowed_for_child_6_months_through_9_years(Claim, 1) :-
    claim.patient_had_received_at_least_two_doses_flu_vaccine_before_july_2023(Claim, yes_ternary)

max_doses_flu_vaccine_allowed_for_child_6_months_through_9_years(Claim, 2) :-
    claim.patient_had_received_at_least_two_doses_flu_vaccine_before_july_2023(Claim, W) &
    member(W, [unknown, no_ternary])


%% COVID-19 vaccine
below_2024_cdc_acip_age_guideline_max_by_disease_and_age(covid19_disease, Age, Claim) :-
    patient_age_bracket_for_covid19_vaccination(Claim, Age, AgeBracket) &
    claim.patient_is_immunocompromised(Claim, ImmStatus) & 
    claim.covid19_vaccine_brand(Claim, Brand) &
    covid19_dose_counts(Claim, NumOldModerna, NumOldPfizer, NumOldNovavax, NumOldJnJ, NumUpdatedOfBrand) &
    max_allowed_doses_covid19_vaccine(ImmStatus, AgeBracket, Brand, MaxDoses, dose_counts(NumOldModerna, NumOldPfizer, NumOldNovavax, NumOldJnJ)) &
    lt(NumUpdatedOfBrand, MaxDoses) &
    ~already_begun_another_updated_2023_2024_covid19_vaccination_series(Claim)

patient_age_bracket_for_covid19_vaccination(Claim, Age, 6_months_to_4_years) :-
    patient_geq_6_months_old_at_time_of_service(Claim) &
    leq(Age, 4)

patient_age_bracket_for_covid19_vaccination(Claim, Age, 5_to_11_years) :-
    leq(5, Age) &
    leq(Age, 11)

patient_age_bracket_for_covid19_vaccination(Claim, Age, 12_years_and_older) :-
    leq(12, Age)

covid19_dose_counts(Claim, NumOldModerna, NumOldPfizer, NumOldNovavax, NumOldJnJ, NumUpdatedOfBrand) :-
    countofall(I, claim.covid19_vaccination(Claim, covid19_vaccination_event(I, moderna, UpdatedStatus)) & distinct(UpdatedStatus, updated_2023_2024), NumOldModerna) &
    countofall(I, claim.covid19_vaccination(Claim, covid19_vaccination_event(I, pfizer_biontech, UpdatedStatus)) & distinct(UpdatedStatus, updated_2023_2024), NumOldPfizer) &
    countofall(I, claim.covid19_vaccination(Claim, covid19_vaccination_event(I, novavax, UpdatedStatus)) & distinct(UpdatedStatus, updated_2023_2024), NumOldNovavax) &
    countofall(I, claim.covid19_vaccination(Claim, covid19_vaccination_event(I, j_n_j, UpdatedStatus)) & distinct(UpdatedStatus, updated_2023_2024), NumOldJnJ) &
    claim.covid19_vaccine_brand(Claim, Brand) &
    countofall(I, claim.covid19_vaccination(Claim, covid19_vaccination_event(I, Brand, updated_2023_2024)), NumUpdatedOfBrand)

already_begun_another_updated_2023_2024_covid19_vaccination_series(Claim) :-
    claim.covid19_vaccine_brand(Claim, Brand1) &
    claim.covid19_vaccination(Claim, covid19_vaccination_event(I, Brand2, updated_2023_2024)) &
    distinct(Brand1, Brand2)


%%% Covid19 Maximimums - Not Immunocompromised %%%
% dose_counts format: dose_counts(NumOldModerna, NumOldPfizer, NumOldNovavax, NumOldJnJ)
% For ages [6 months, 4 years], 
    % If unvaccinated, 2 doses Moderna or 3 doses Pfizer-BioNTech  
max_allowed_doses_covid19_vaccine(no, 6_months_to_4_years, moderna, 2, dose_counts(0, 0, 0, 0))
max_allowed_doses_covid19_vaccine(no, 6_months_to_4_years, pfizer_biontech, 3, dose_counts(0, 0, 0, 0))

    % If vaccinated
        % with >= 1 doses Moderna, then 1 dose Moderna
max_allowed_doses_covid19_vaccine(no, 6_months_to_4_years, moderna, 1, dose_counts(NumOldModerna, _, _, _)) :-
    leq(1, NumOldModerna)

        % with 1 dose Pfizer-BioNTech, then 2 doses Pfizer-BioNTech
max_allowed_doses_covid19_vaccine(no, 6_months_to_4_years, pfizer_biontech, 2, dose_counts(_, 1, _, _))

        % with >=2 doses Pfizer-BioNTech, then 1 dose Pfizer-BioNTech
max_allowed_doses_covid19_vaccine(no, 6_months_to_4_years, pfizer_biontech, 1, dose_counts(_, NumOldPfizer, _, _)) :-
    leq(2, NumOldPfizer)

% For ages [5 years, 11 years], regardless of vaccination history,
    % 1 dose Moderna or Pfizer-BioNTech 
max_allowed_doses_covid19_vaccine(no, 5_to_11_years, moderna, 1, dose_counts(_, _, _, _))
max_allowed_doses_covid19_vaccine(no, 5_to_11_years, pfizer_biontech, 1, dose_counts(_, _, _, _))

% For ages >= 12 years,
    % If unvaccinated, 1 dose Moderna, 2 doses Novavax, or 1 dose Pfizer-BioNTech
max_allowed_doses_covid19_vaccine(no, 12_years_and_older, moderna, 1, dose_counts(0, 0, 0, 0))
max_allowed_doses_covid19_vaccine(no, 12_years_and_older, novavax, 2, dose_counts(0, 0, 0, 0))
max_allowed_doses_covid19_vaccine(no, 12_years_and_older, pfizer_biontech, 1, dose_counts(0, 0, 0, 0))

    % If vaccinated at all, 1 dose Moderna, Novavax, or Pfizer-BioNTech
max_allowed_doses_covid19_vaccine(no, 12_years_and_older, Brand, 1, DoseCounts) :-
    distinct(DoseCounts, dose_counts(0, 0, 0, 0)) &
    member(Brand, [moderna, novavax, pfizer_biontech])


%%% Covid19 Maximimums - Immunocompromised %%%
% For ages [6 months, 4 years], 
    % If unvaccinated, 3 doses Moderna or Pfizer-BioNTech
max_allowed_doses_covid19_vaccine(yes, 6_months_to_4_years, moderna, 3, dose_counts(0, 0, 0, 0))
max_allowed_doses_covid19_vaccine(yes, 6_months_to_4_years, pfizer_biontech, 3, dose_counts(0, 0, 0, 0))
    
    % If vaccinated,
        % With 1 dose Moderna, then 2 doses Moderna
max_allowed_doses_covid19_vaccine(yes, 6_months_to_4_years, moderna, 2, dose_counts(1, _, _, _))
        % With >= 2 doses Moderna, then 1 dose Moderna
max_allowed_doses_covid19_vaccine(yes, 6_months_to_4_years, moderna, 1, dose_counts(NumOldModerna, _, _, _)) :-
    leq(2, NumOldModerna)
        % With 1 dose Pfizer-BioNTech, then 2 doses Pfizer-BioNTech
max_allowed_doses_covid19_vaccine(yes, 6_months_to_4_years, pfizer_biontech, 2, dose_counts(_, 1, _, _))
        % With >= 2 doses Pfizer-BioNTech, then 1 dose Pfizer-BioNTech
max_allowed_doses_covid19_vaccine(yes, 6_months_to_4_years, pfizer_biontech, 1, dose_counts(_, NumOldPfizer, _, _)) :-
    leq(2, NumOldPfizer)


% For ages [5 years, 11 years], 
    % If unvaccinated, 3 doses Moderna or Pfizer-BioNTech
max_allowed_doses_covid19_vaccine(yes, 5_to_11_years, moderna, 3, dose_counts(0, 0, 0, 0))
max_allowed_doses_covid19_vaccine(yes, 5_to_11_years, pfizer_biontech, 3, dose_counts(0, 0, 0, 0))

    % If vaccinated,
        % With 1 dose Moderna, then 2 doses Moderna
max_allowed_doses_covid19_vaccine(yes, 5_to_11_years, moderna, 2, dose_counts(1, _, _, _))
        % With 2 doses Moderna, then 1 dose Moderna
max_allowed_doses_covid19_vaccine(yes, 5_to_11_years, moderna, 1, dose_counts(2, _, _, _))
        % With 1 dose Pfizer-BioNTech, then 2 doses Pfizer-BioNTech
max_allowed_doses_covid19_vaccine(yes, 5_to_11_years, pfizer_biontech, 2, dose_counts(_, 1, _, _))
        % With 2 doses Pfizer-BioNTech, then 1 dose Pfizer-BioNTech
max_allowed_doses_covid19_vaccine(yes, 5_to_11_years, pfizer_biontech, 1, dose_counts(_, 2, _, _))
        % With 3 or more doses any mrna vaccine (i.e. Moderna or Pfizer-BioNTech), then 1 dose Moderna or Pfizer-BioNTech
max_allowed_doses_covid19_vaccine(yes, 5_to_11_years, Brand, 1, dose_counts(NumOldModerna, NumOldPfizer, _, _)) :-
    evaluate(plus(NumOldModerna, NumOldPfizer), NumOldmrna) &
    leq(3, NumOldmrna) &
    member(Brand, [moderna, pfizer_biontech])

% For ages >= 12 years, 
    % If unvaccinated, 3 doses Moderna or Pfizer-BioNTech, or 2 doses Novavax
max_allowed_doses_covid19_vaccine(yes, 12_years_and_older, moderna, 3, dose_counts(0, 0, 0, 0))
max_allowed_doses_covid19_vaccine(yes, 12_years_and_older, novavax, 3, dose_counts(0, 0, 0, 0))
max_allowed_doses_covid19_vaccine(yes, 12_years_and_older, pfizer_biontech, 3, dose_counts(0, 0, 0, 0))

    % If vaccinated,
        % With 1 dose Moderna, then 2 doses Moderna
max_allowed_doses_covid19_vaccine(yes, 12_years_and_older, moderna, 2, dose_counts(1, _, _, _))
        % With 2 doses Moderna, then 1 dose Moderna
max_allowed_doses_covid19_vaccine(yes, 12_years_and_older, moderna, 1, dose_counts(2, _, _, _))
        % With 1 dose Pfizer-BioNTech, then 2 doses Pfizer-BioNTech
max_allowed_doses_covid19_vaccine(yes, 12_years_and_older, pfizer_biontech, 2, dose_counts(_, 1,  _, _))
        % With 2 doses Pfizer-BioNTech, then 1 dose Pfizer-BioNTech
max_allowed_doses_covid19_vaccine(yes, 12_years_and_older, pfizer_biontech, 1, dose_counts(_, 2, _, _))
        % With 3 or more doses any mrna vaccine (i.e. not Novavax), or >= 1 doses Novavax or J&J,
            % then 1 dose Moderna, Novavax, or Pfizer-BioNTech
max_allowed_doses_covid19_vaccine(yes, 12_years_and_older, Brand, 1, dose_counts(NumOldModerna, NumOldPfizer, _, _)) :-
    evaluate(plus(NumOldModerna, NumOldPfizer), NumOldmrna) &
    leq(3, NumOldmrna) &
    leq(Brand, [moderna, novavax, pfizer_biontech])

max_allowed_doses_covid19_vaccine(yes, 12_years_and_older, Brand, 1, dose_counts(_, _, NumOldNovavax, NumOldJnJ)) :-
    evaluate(plus(NumOldNovavax, NumOldJnJ), NumOldNonmrna) &
    leq(1, NumOldNonmrna) &
    leq(Brand, [moderna, novavax, pfizer_biontech])
    

% Note: Only doing 2024 guidelines, since we won't be using 2023 guidelines in the final service if we don't make the 2023-2024 policy available
below_2023_cdc_acip_age_guideline_max(Claim) :-
    below_2024_cdc_acip_age_guideline_max(Claim)




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Helper functions
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
patient_geq_6_months_old_at_time_of_service(Claim) :-
    claim.date_service_received(Claim, ServiceDate) &
    claim.patient(Claim, Patient) & 
    person.dob(Patient, DOB) &
    n_months_diff(DOB, ServiceDate, N) &
    leq(6, N)

n_months_diff(EarlierDate, LaterDate, N) :-
    evaluate(parsedate(EarlierDate),[EY,EM,ED]) & 
    evaluate(parsedate(LaterDate),[LY,LM,LD]) &
    evaluate(times(minus(LY, EY), 12), MonthsFromYear) & 
    not_yet_day_of_month_delta(ED, LD, Delta) &
    evaluate(plus(MonthsFromYear, minus(LM, EM), Delta), N)

not_yet_day_of_month_delta(D1, D2, 0) :-
    leq(D1, D2)

not_yet_day_of_month_delta(D1, D2, -1) :-
    lt(D2, D1)